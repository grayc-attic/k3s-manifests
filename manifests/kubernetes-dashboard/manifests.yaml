apiVersion: v1
kind: ServiceAccount
metadata:
  name: kubernetes-dashboard
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kubernetes-dashboard
rules:
  - apiGroups:
      - "*"
    resources:
      - "*"
    verbs:
      - "*"
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kubernetes-dashboard
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubernetes-dashboard
subjects:
  - kind: ServiceAccount
    name: kubernetes-dashboard
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: kubernetes-dashboard-settings
---
apiVersion: v1
data: {}
kind: Secret
metadata:
  name: kubernetes-dashboard-certs
type: Opaque
---
apiVersion: v1
data: {}
kind: Secret
metadata:
  name: kubernetes-dashboard-csrf
type: Opaque
---
apiVersion: v1
data: {}
kind: Secret
metadata:
  name: kubernetes-dashboard-key-holder
type: Opaque
---
apiVersion: v1
kind: Service
metadata:
  name: kubernetes-dashboard
spec:
  ports:
    - name: http
      port: 80
      targetPort: http
  selector:
    app.kubernetes.io/name: kubernetes-dashboard
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kubernetes-dashboard
spec:
  replicas: 1
  revisionHistoryLimit: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: kubernetes-dashboard
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kubernetes-dashboard
    spec:
      automountServiceAccountToken: true
      containers:
        - args:
            - --insecure-port=8080
            - --insecure-bind-address=0.0.0.0
            - --namespace=default
            - --metrics-provider=none
          image: docker.io/kubernetesui/dashboard:v2.7.0
          imagePullPolicy: IfNotPresent
          name: kubernetesui-dashboard
          ports:
            - containerPort: 8080
              name: http
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
          startupProbe:
            failureThreshold: 55
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 5
            periodSeconds: 1
            successThreshold: 1
          volumeMounts:
            - mountPath: /tmp
              name: tmp
      enableServiceLinks: false
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsUser: 1000
      serviceAccountName: kubernetes-dashboard
      terminationGracePeriodSeconds: 0
      volumes:
        - emptyDir: {}
          name: tmp
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: kubernetes-dashboard
spec:
  rules:
    - host: dashboard.127.0.0.1.nip.io
      http:
        paths:
          - backend:
              service:
                name: kubernetes-dashboard
                port:
                  name: http
            path: /
            pathType: Prefix
