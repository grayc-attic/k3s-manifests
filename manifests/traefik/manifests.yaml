apiVersion: v1
kind: ServiceAccount
metadata:
  name: traefik
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: traefik
rules:
  - apiGroups:
      - ""
    resources:
      - services
      - endpoints
      - secrets
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - networking.k8s.io
    resources:
      - ingresses
      - ingressclasses
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - networking.k8s.io
    resources:
      - ingresses/status
    verbs:
      - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: traefik
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: traefik
subjects:
  - kind: ServiceAccount
    name: traefik
---
apiVersion: v1
kind: Service
metadata:
  name: traefik
spec:
  ports:
    - name: admin
      port: 80
      targetPort: admin
  selector:
    app.kubernetes.io/name: traefik
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: traefik
spec:
  replicas: 1
  revisionHistoryLimit: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: traefik
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: traefik
    spec:
      automountServiceAccountToken: true
      containers:
        - args:
            - --providers.kubernetesingress=true
            - --entrypoints.traefik.address=:8090
            - --entrypoints.http.address=:8080
            - --accesslog=true
            - --accesslog.fields.defaultmode=keep
            - --accesslog.fields.headers.defaultmode=keep
            - --ping=true
            - --api.insecure=true
            - --api.dashboard=true
            - --api.debug=true
            - --global.checknewversion=false
            - --global.sendAnonymousUsage=false
          image: docker.io/traefik:v2.9.4
          imagePullPolicy: IfNotPresent
          name: traefik
          ports:
            - containerPort: 8080
              hostPort: 8080
              name: http
            - containerPort: 8090
              name: admin
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
          startupProbe:
            failureThreshold: 55
            httpGet:
              path: /ping
              port: admin
            initialDelaySeconds: 5
            periodSeconds: 1
            successThreshold: 1
      enableServiceLinks: false
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsUser: 1000
      serviceAccountName: traefik
      terminationGracePeriodSeconds: 0
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: traefik
spec:
  rules:
    - host: traefik.127.0.0.1.nip.io
      http:
        paths:
          - backend:
              service:
                name: traefik
                port:
                  name: admin
            path: /
            pathType: Prefix
